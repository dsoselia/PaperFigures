CHATDEV employs the widely adopted waterfall model, a prominent software development life
cycle model, to divide the software development process into four distinct phases: designing, coding,
testing, and documenting. In the designing phase, innovative ideas are generated through collab-
orative brainstorming, and technical design requirements are defined. The coding phase involves
the development and review of source code, while the testing phase integrates all components into
a system and utilizes feedback messages from interpreter for debugging. The documenting phase
encompasses the generation of environment specifications and user manuals. Each of these phases
necessitates effective communication among multiple roles, posing challenges in determining the
sequence of interactions and identifying the relevant individuals to engage with.
To address this, we propose a generalized architecture by breaking down each phase into multiple
atomic chats, each with a specific focus on task-oriented role-playing involving two distinct roles.
Through the exchange of instructions and collaboration between the participating agents, the desired
output for each chat, which forms a vital component of the target software, is achieved. An illustration
of this process is depicted in Figure 2, where a sequence of intermediate task-solving chats, referred to
as a “chat chain”, is presented. In each chat, an instructor initiates instructions, guiding the dialogue
towards task completion, while the assistant follows the instructions, provides suitable solutions,
and engages in discussions regarding feasibility. The instructor and assistant cooperate through
multi-turn dialogues until they reach a consensus and determine that the task has been successfully
accomplished.
The chat chain provides a transparent view of the software development process, shedding light on the
decision-making path and offering opportunities for debugging when errors arise, which enables users
to inspect intermediate outputs, diagnose errors, and intervene in the reasoning process if necessary.
Besides, chat chain ensures a granular focus on specific subtasks within each phase, facilitating
effective collaboration and promoting the attainment of desired outputs.
Figure 2: The proposed architecture of CHATDEV consists of phase-level and chat-level components.
At the phase level, the waterfall model is used to break down the software development process into
four sequential phases. At the chat level, each phase is further divided into atomic chats. These atomic
chats involve task-oriented role-playing between two agents, promoting collaborative communication.
The communication follows an instruction-following style, where agents interact to accomplish a
specific subtask within each chat.
2.2
Designing
In the designing phase, CHATDEV receives an initial idea from a human client. This phase involves
three predefined roles: CEO (chief executive officer), CPO (chief product officer), and CTO (chief
technology officer). The chat chain then breaks down the designing phase into sequential atomic
chatting tasks, including decisions regarding the target software’s modality (CEO and CPO) and the
programming language (CEO and CTO).
4